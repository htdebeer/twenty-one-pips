const ConfigurationError=class extends Error{constructor(e){super(e)}},FULL_CIRCLE_IN_DEGREES=360,randomizeCenter=e=>(.5<=Math.random()?Math.floor:Math.ceil).call(0,e),_width=new WeakMap,_height=new WeakMap,_cols=new WeakMap,_rows=new WeakMap,_dice=new WeakMap,_dieSize=new WeakMap,_dispersion=new WeakMap,_rotate=new WeakMap,GridLayout=class{constructor({width:e,height:t,dispersion:i,dieSize:s}={}){_dice.set(this,[]),_dieSize.set(this,1),_width.set(this,0),_height.set(this,0),_rotate.set(this,!0),this.dispersion=i,this.dieSize=s,this.width=e,this.height=t}get width(){return _width.get(this)}set width(e){if(0>e)throw new ConfigurationError(`Width should be a number larger than 0, got '${e}' instead.`);_width.set(this,e),this._calculateGrid(this.width,this.height)}get height(){return _height.get(this)}set height(e){if(0>e)throw new ConfigurationError(`Height should be a number larger than 0, got '${e}' instead.`);_height.set(this,e),this._calculateGrid(this.width,this.height)}get maximumNumberOfDice(){return this._cols*this._rows}get dispersion(){return _dispersion.get(this)}set dispersion(e){if(0>e)throw new ConfigurationError(`Dispersion should be a number larger than 0, got '${e}' instead.`);return _dispersion.set(this,e)}get dieSize(){return _dieSize.get(this)}set dieSize(e){if(0>=e)throw new ConfigurationError(`dieSize should be a number larger than 1, got '${e}' instead.`);_dieSize.set(this,e),this._calculateGrid(this.width,this.height)}get rotate(){const e=_rotate.get(this);return void 0===e||e}set rotate(e){_rotate.set(this,e)}get _rows(){return _rows.get(this)}get _cols(){return _cols.get(this)}get _center(){return{row:randomizeCenter(this._rows/2)-1,col:randomizeCenter(this._cols/2)-1}}layout(e){if(e.length>this.maximumNumberOfDice)throw new ConfigurationError(`The number of dice that can be layout is ${this.maximumNumberOfDice}, got ${e.lenght} dice instead.`);const t=[],i=[];for(const s of e)s.hasCoordinates()&&s.isHeld()?t.push(s):i.push(s);const s=Math.min(e.length*this.dispersion,this.maximumNumberOfDice),r=this._computeAvailableCells(s,t);for(const e of i){const i=Math.floor(Math.random()*r.length),s=r[i];r.splice(i,1),e.coordinates=this._numberToCoordinates(s),e.rotation=this.rotate?Math.round(360*Math.random()):null,t.push(e)}return _dice.set(this,t),t}_computeAvailableCells(e,t){const i=new Set;let s=0;const r=Math.min(this._rows,this._cols);for(;i.size<e&&s<r;){for(const e of this._cellsOnLevel(s))void 0!==e&&this._cellIsEmpty(e,t)&&i.add(e);s++}return Array.from(i)}_cellsOnLevel(e){const t=new Set,i=this._center;if(0===e)t.add(this._cellToNumber(i));else{for(let s=i.row-e;s<=i.row+e;s++)t.add(this._cellToNumber({row:s,col:i.col-e})),t.add(this._cellToNumber({row:s,col:i.col+e}));for(let s=i.col-e+1;s<i.col+e;s++)t.add(this._cellToNumber({row:i.row-e,col:s})),t.add(this._cellToNumber({row:i.row+e,col:s}))}return t}_cellIsEmpty(e,t){return void 0===t.find(t=>e===this._coordinatesToNumber(t.coordinates))}_numberToCell(e){return{row:Math.trunc(e/this._cols),col:e%this._cols}}_cellToNumber({row:e,col:t}){if(0<=e&&e<this._rows&&0<=t&&t<this._cols)return e*this._cols+t}_numberToCoordinates(e){return this._cellToCoords(this._numberToCell(e))}_coordinatesToNumber(e){const t=this._cellToNumber(this._coordsToCell(e));if(0<=t&&t<this.maximumNumberOfDice)return t}snapTo({die:e=null,x:t,y:i}){const s={row:Math.trunc(i/this.dieSize),col:Math.trunc(t/this.dieSize)},r=this._cellToCoords(s),o=r.x+this.dieSize-t,n=this.dieSize-o,a=r.y+this.dieSize-i,l=this.dieSize-a,h=[{q:this._cellToNumber(s),coverage:o*a},{q:this._cellToNumber({row:s.row,col:s.col+1}),coverage:n*a},{q:this._cellToNumber({row:s.row+1,col:s.col}),coverage:o*l},{q:this._cellToNumber({row:s.row+1,col:s.col+1}),coverage:n*l}].filter(e=>void 0!==e.q).filter(t=>null!==e&&this._coordinatesToNumber(e.coordinates)===t.q||this._cellIsEmpty(t.q,_dice.get(this))).reduce((e,t)=>t.coverage>e.coverage?t:e,{q:void 0,coverage:-1});return void 0!==h.q?this._numberToCoordinates(h.q):null}getAt(e={x:0,y:0}){for(const t of _dice.get(this)){const{x:i,y:s}=t.coordinates,r=i<=e.x&&e.x<=i+this.dieSize,o=s<=e.y&&e.y<=s+this.dieSize;if(r&&o)return t}return null}_calculateGrid(e,t){_cols.set(this,Math.floor(e/this.dieSize)),_rows.set(this,Math.floor(t/this.dieSize))}_cellToCoords({row:e,col:t}){return{x:t*this.dieSize,y:e*this.dieSize}}_coordsToCell({x:e,y:t}){return{row:Math.trunc(t/this.dieSize),col:Math.trunc(e/this.dieSize)}}},attribute2property=e=>{const[t,...i]=e.split("-");return t+i.map(e=>e.slice(0,1).toUpperCase()+e.slice(1)).join()},ReadOnlyAttributes=e=>(class extends e{attributeChangedCallback(e,t,i){const s=attribute2property(e);i!==`${this[s]}`&&this.setAttribute(e,this[s])}}),COLOR_ATTRIBUTE="color",NAME_ATTRIBUTE="name",SCORE_ATTRIBUTE="score",HAS_TURN_ATTRIBUTE="has-turn",_color=new WeakMap,_name=new WeakMap,_score=new WeakMap,_hasTurn=new WeakMap,TopPlayerHTMLElement=class extends(ReadOnlyAttributes(HTMLElement)){constructor({color:e=null,name:t=null,score:i=null,hasTurn:s=null}){if(super(),e&&""!==e)_color.set(this,e),this.setAttribute("color",this.color);else{if(!this.hasAttribute("color")||""===this.getAttribute("color"))throw new ConfigurationError("A Player needs a color, which is a String.");_color.set(this,this.getAttribute("color"))}if(t&&""!==t)_name.set(this,t),this.setAttribute("name",this.name);else{if(!this.hasAttribute("name")||""===this.getAttribute("name"))throw new ConfigurationError("A Player needs a name, which is a String.");_name.set(this,this.getAttribute("name"))}i?(_score.set(this,i),this.setAttribute("score",this.score)):this.hasAttribute("score")&&Number.isNaN(parseInt(this.getAttribute("score"),10))?_score.set(this,parseInt(this.getAttribute("score"),10)):_score.set(this,null),!0===s?(_hasTurn.set(this,s),this.setAttribute("has-turn",s)):this.hasAttribute("has-turn")?_hasTurn.set(this,!0):_hasTurn.set(this,null)}static get observedAttributes(){return["color","name","score","has-turn"]}connectedCallback(){}disconnectedCallback(){}get color(){return _color.get(this)}get name(){return _name.get(this)}get score(){return null===_score.get(this)?0:_score.get(this)}set score(e){_score.set(this,e),null===e?this.removeAttribute("score"):this.setAttribute("score",e)}startTurn(){_hasTurn.set(this,!0),this.setAttribute("has-turn",!0)}endTurn(){_hasTurn.set(this,null),this.removeAttribute("has-turn")}get hasTurn(){return!0===_hasTurn.get(this)}toString(){return`${this.name}`}equals(e){const t="string"==typeof e?e:e.name;return e===this||t===this.name}};window.customElements.define("top-player",TopPlayerHTMLElement);const DEFAULT_SYSTEM_PLAYER=new TopPlayerHTMLElement({color:"red",name:"*"}),DEFAULT_DIE_SIZE=100,DEFAULT_HOLD_DURATION=375,DEFAULT_DRAGGING_DICE_DISABLED=!1,DEFAULT_HOLDING_DICE_DISABLED=!1,DEFAULT_ROTATING_DICE_DISABLED=!1,ROWS=10,COLS=10,DEFAULT_WIDTH=1e3,DEFAULT_HEIGHT=1e3,DEFAULT_DISPERSION=Math.floor(5),MIN_DELTA=3,WIDTH_ATTRIBUTE="width",HEIGHT_ATTRIBUTE="height",DISPERSION_ATTRIBUTE="dispersion",DIE_SIZE_ATTRIBUTE="die-size",DRAGGING_DICE_DISABLED_ATTRIBUTE="dragging-dice-disabled",HOLDING_DICE_DISABLED_ATTRIBUTE="holding-dice-disabled",ROTATING_DICE_DISABLED_ATTRIBUTE="rotating-dice-disabled",HOLD_DURATION_ATTRIBUTE="hold-duration",parseNumber=(e,t=0)=>{const i=parseInt(e,10);return Number.isNaN(i)?t:i},validatePositiveNumber=(e,t=1/0)=>0<=e&&e<t,getPositiveNumber=(e,t)=>{const i=parseNumber(e,t);return validatePositiveNumber(i)?i:t},getPositiveNumberAttribute=(e,t,i)=>{if(e.hasAttribute(t)){const s=e.getAttribute(t);return getPositiveNumber(s,i)}return i},getBoolean=(e,t,i)=>t===e||"true"===e||"false"!==e&&i,getBooleanAttribute=(e,t,i)=>{if(e.hasAttribute(t)){const i=e.getAttribute(t);return getBoolean(i,[i,"true"],["false"])}return i},_canvas=new WeakMap,_layout=new WeakMap,_currentPlayer=new WeakMap,_numberOfReadyDice=new WeakMap,context=e=>_canvas.get(e).getContext("2d"),getReadyDice=e=>(void 0===_numberOfReadyDice.get(e)&&_numberOfReadyDice.set(e,0),_numberOfReadyDice.get(e)),updateReadyDice=(e,t)=>{_numberOfReadyDice.set(e,getReadyDice(e)+t)},isReady=e=>getReadyDice(e)===e.dice.length,updateBoard=(e,t=e.dice)=>{if(isReady(e)){context(e).clearRect(0,0,e.width,e.height);for(const i of t)i.render(context(e),e.dieSize)}},NONE=Symbol("no_interaction"),HOLD=Symbol("hold"),MOVE=Symbol("move"),INDETERMINED=Symbol("indetermined"),DRAGGING=Symbol("dragging"),convertWindowCoordinatesToCanvas=(e,t,i)=>{const s=e.getBoundingClientRect();return{x:t-s.left*(e.width/s.width),y:i-s.top*(e.height/s.height)}},setupInteraction=e=>{const t=_canvas.get(e);let i={},s=NONE,r=null,o=null,n=null;const a=()=>{HOLD!==s&&INDETERMINED!==s||(o.isHeld()?o.releaseIt(e.currentPlayer):o.holdIt(e.currentPlayer),s=NONE,updateBoard(e)),n=null},l=()=>{n=window.setTimeout(a,e.holdDuration)},h=i=>{const r=e.layout.getAt(convertWindowCoordinatesToCanvas(t,i.clientX,i.clientY));t.style.cursor=DRAGGING===s?"grabbing":null!==r?"grab":"default"},d=a=>{if(MOVE===s||INDETERMINED===s){const l=Math.abs(i.x-a.clientX),h=Math.abs(i.y-a.clientY);if(3<l||3<h){s=DRAGGING,window.clearTimeout(n),n=null;const i=e.dice.filter(e=>e!==o);updateBoard(e,i),r=context(e).getImageData(0,0,t.width,t.height)}}else if(DRAGGING===s){const t=i.x-a.clientX,s=i.y-a.clientY,{x:n,y:l}=o.coordinates;context(e).putImageData(r,0,0),o.render(context(e),e.dieSize,{x:n-t,y:l-s})}},c=t=>{if(null!==o&&DRAGGING===s){const s=i.x-t.clientX,r=i.y-t.clientY,{x:n,y:a}=o.coordinates,l=e.layout.snapTo({die:o,x:n-s,y:a-r}),h=null!=l?l:{x:n,y:a};o.coordinates=h}o=null,s=NONE,updateBoard(e)};let u={clientX:0,clientY:0};const g=e=>i=>{if(i&&0<i.touches.length){const{clientX:e,clientY:t}=i.touches[0];u={clientX:e,clientY:t}}t.dispatchEvent(new MouseEvent(e,u))};t.addEventListener("touchstart",g("mousedown")),t.addEventListener("mousedown",r=>{NONE===s&&(i={x:r.clientX,y:r.clientY},null!==(o=e.layout.getAt(convertWindowCoordinatesToCanvas(t,r.clientX,r.clientY)))&&(e.disabledHoldingDice||e.disabledDraggingDice?e.disabledHoldingDice?e.disabledDraggingDice||(s=MOVE):(s=HOLD,l()):(s=INDETERMINED,l())))}),e.disabledDraggingDice||(t.addEventListener("touchmove",g("mousemove")),t.addEventListener("mousemove",d)),e.disabledDraggingDice&&e.disabledHoldingDice||t.addEventListener("mousemove",h),t.addEventListener("touchend",g("mouseup")),t.addEventListener("mouseup",c),t.addEventListener("mouseout",c)},TopDiceBoardHTMLElement=class extends HTMLElement{constructor(){super(),this.style.display="inline-block";const e=this.attachShadow({mode:"closed"}),t=document.createElement("canvas");e.appendChild(t),_canvas.set(this,t),_currentPlayer.set(this,DEFAULT_SYSTEM_PLAYER),_layout.set(this,new GridLayout({width:this.width,height:this.height,dieSize:this.dieSize,dispersion:this.dispersion})),setupInteraction(this)}static get observedAttributes(){return["width","height","dispersion","die-size","dragging-dice-disabled","rotating-dice-disabled","holding-dice-disabled","hold-duration"]}attributeChangedCallback(e,t,i){const s=_canvas.get(this);switch(e){case"width":{const e=getPositiveNumber(i,parseNumber(t)||1e3);this.layout.width=e,s.setAttribute("width",e);break}case"height":{const e=getPositiveNumber(i,parseNumber(t)||1e3);this.layout.height=e,s.setAttribute("height",e);break}case"dispersion":{const e=getPositiveNumber(i,parseNumber(t)||DEFAULT_DISPERSION);this.layout.dispersion=e;break}case"die-size":{const e=getPositiveNumber(i,parseNumber(t)||100);this.layout.dieSize=e;break}case"rotating-dice-disabled":{const e=getBoolean(i,"rotating-dice-disabled",getBoolean(t,"rotating-dice-disabled",!1));this.layout.rotate=!e;break}}updateBoard(this)}connectedCallback(){this.addEventListener("top-die:added",()=>{updateReadyDice(this,1),isReady(this)&&updateBoard(this,this.layout.layout(this.dice))}),this.addEventListener("top-die:removed",()=>{updateBoard(this,this.layout.layout(this.dice)),updateReadyDice(this,-1)}),null===this.querySelector("top-player-list")&&this.appendChild(document.createElement("top-player-list"))}disconnectedCallback(){}adoptedCallback(){}get layout(){return _layout.get(this)}get dice(){return[...this.getElementsByTagName("top-die")]}get maximumNumberOfDice(){return this.layout.maximumNumberOfDice}get width(){return getPositiveNumberAttribute(this,"width",1e3)}get height(){return getPositiveNumberAttribute(this,"height",1e3)}get dispersion(){return getPositiveNumberAttribute(this,"dispersion",DEFAULT_DISPERSION)}get dieSize(){return getPositiveNumberAttribute(this,"die-size",100)}get disabledDraggingDice(){return getBooleanAttribute(this,"dragging-dice-disabled",!1)}get disabledHoldingDice(){return getBooleanAttribute(this,"holding-dice-disabled",!1)}get disabledRotatingDice(){return getBooleanAttribute(this,"rotating-dice-disabled",!1)}get holdDuration(){return getPositiveNumberAttribute(this,"hold-duration",375)}get currentPlayer(){return this.querySelector("top-player-list top-player[has-turn]")}get players(){return this.querySelector("top-player-list").players}throwDice(e=DEFAULT_SYSTEM_PLAYER){return e.hasTurn||(this.players.forEach(e=>e.endTurn()),e.startTurn()),this.dice.forEach(e=>e.throwIt()),updateBoard(this,this.layout.layout(this.dice)),this.dice}};window.customElements.define("top-dice-board",TopDiceBoardHTMLElement);const NUMBER_OF_PIPS=6,DEFAULT_COLOR="Ivory",DEFAULT_X=0,DEFAULT_Y=0,DEFAULT_ROTATION=0,DEFAULT_OPACITY=.5,COLOR_ATTRIBUTE$1="color",HELD_BY_ATTRIBUTE="held-by",PIPS_ATTRIBUTE="pips",ROTATION_ATTRIBUTE="rotation",X_ATTRIBUTE="x",Y_ATTRIBUTE="y",BASE_DIE_SIZE=100,BASE_ROUNDED_CORNER_RADIUS=15,BASE_STROKE_WIDTH=2.5,MIN_STROKE_WIDTH=1,HALF=50,THIRD=100/3,PIP_SIZE=100/15,PIP_COLOR="black",deg2rad=e=>e*(Math.PI/180),isPipNumber=e=>{const t=parseInt(e,10);return Number.isInteger(t)&&1<=t&&t<=6},randomPips=()=>Math.floor(6*Math.random())+1,DIE_UNICODE_CHARACTERS=["⚀","⚁","⚂","⚃","⚄","⚅"],pipsToUnicode=e=>isPipNumber(e)?DIE_UNICODE_CHARACTERS[e-1]:void 0,renderHold=(e,t,i,s,r)=>{const o=s/30;e.save(),e.globalAlpha=.5,e.beginPath(),e.fillStyle=r,e.arc(t+s,i+s,s-o,0,2*Math.PI,!1),e.fill(),e.restore()},renderDie=(e,t,i,s,r)=>{const o=s/50,n=Math.sqrt(s**2/2),a=2*n,l=15*o,h=a-2*l,d=Math.max(1,2.5*o),c=t+s-n+l,u=i+s-n;e.save(),e.beginPath(),e.fillStyle=r,e.strokeStyle="black",e.lineWidth=d,e.moveTo(c,u),e.lineTo(c+h,u),e.arc(c+h,u+l,l,deg2rad(270),deg2rad(0)),e.lineTo(c+h+l,u+h+l),e.arc(c+h,u+h+l,l,deg2rad(0),deg2rad(90)),e.lineTo(c,u+a),e.arc(c,u+h+l,l,deg2rad(90),deg2rad(180)),e.lineTo(c-l,u+l),e.arc(c,u+l,l,deg2rad(180),deg2rad(270)),e.stroke(),e.fill(),e.restore()},renderPip=(e,t,i,s)=>{e.save(),e.beginPath(),e.fillStyle="black",e.moveTo(t,i),e.arc(t,i,s,0,2*Math.PI,!1),e.fill(),e.restore()},_board=new WeakMap,_color$1=new WeakMap,_heldBy=new WeakMap,_pips=new WeakMap,_rotation=new WeakMap,_x=new WeakMap,_y=new WeakMap,TopDieHTMLElement=class extends(ReadOnlyAttributes(HTMLElement)){constructor(){super();let e=NaN;this.hasAttribute("pips")&&(e=parseInt(this.getAttribute("pips"),10)),(Number.isNaN(e)||1>e||6<e)&&(e=randomPips()),_pips.set(this,e),this.setAttribute("pips",e),this.hasAttribute("color")?this.color=this.getAttribute("color"):this.color="Ivory",this.hasAttribute("rotation")?this.rotation=parseInt(this.getAttribute("rotation"),10):this.rotation=0,this.hasAttribute("x")?this.x=parseInt(this.getAttribute("x"),10):this.x=0,this.hasAttribute("y")?this.y=parseInt(this.getAttribute("y"),10):this.y=0,this.hasAttribute("held-by")?this.heldBy=this.getAttribute("held-by"):this.heldBy=null}static get observedAttributes(){return["color","held-by","pips","rotation","x","y"]}connectedCallback(){_board.set(this,this.parentNode),_board.get(this).dispatchEvent(new Event("top-die:added"))}disconnectedCallback(){_board.get(this).dispatchEvent(new Event("top-die:removed")),_board.set(this,null)}toUnicode(){return pipsToUnicode(this.pips)}toString(){return this.toUnicode()}get pips(){return _pips.get(this)}get color(){return _color$1.get(this)}set color(e){null===e?(this.removeAttribute("color"),_color$1.set(this,"Ivory")):(_color$1.set(this,e),this.setAttribute("color",e))}get heldBy(){return _heldBy.get(this)}set heldBy(e){_heldBy.set(this,e),null===e?this.removeAttribute("held-by"):this.setAttribute("held-by",e.toString())}get coordinates(){return null===this.x||null===this.y?null:{x:this.x,y:this.y}}set coordinates(e){if(null===e)this.x=null,this.y=null;else{const{x:t,y:i}=e;this.x=t,this.y=i}}hasCoordinates(){return null!==this.coordinates}get x(){return _x.get(this)}set x(e){_x.set(this,e),this.setAttribute("x",e)}get y(){return _y.get(this)}set y(e){_y.set(this,e),this.setAttribute("y",e)}get rotation(){return _rotation.get(this)}set rotation(e){null===e?this.removeAttribute("rotation"):(_rotation.set(this,e),this.setAttribute("rotation",e))}throwIt(){this.isHeld()||(_pips.set(this,randomPips()),this.setAttribute("pips",this.pips),this.dispatchEvent(new CustomEvent("top:throw-die",{detail:{die:this}})))}holdIt(e){this.isHeld()||(this.heldBy=e,this.dispatchEvent(new CustomEvent("top:hold-die",{detail:{die:this,player:e}})))}isHeld(){return null!==this.heldBy}releaseIt(e){this.isHeld()&&this.heldBy.equals(e)&&(this.heldBy=null,this.removeAttribute("held-by"),this.dispatchEvent(new CustomEvent("top:release-die",{detail:{die:this,player:e}})))}render(e,t,i=this.coordinates){const s=t/100,r=50*s,o=100/3*s,n=100/15*s,{x:a,y:l}=i;switch(this.isHeld()&&renderHold(e,a,l,r,this.heldBy.color),0!==this.rotation&&(e.translate(a+r,l+r),e.rotate(deg2rad(this.rotation)),e.translate(-1*(a+r),-1*(l+r))),renderDie(e,a,l,r,this.color),this.pips){case 1:renderPip(e,a+r,l+r,n);break;case 2:renderPip(e,a+o,l+o,n),renderPip(e,a+2*o,l+2*o,n);break;case 3:renderPip(e,a+o,l+o,n),renderPip(e,a+r,l+r,n),renderPip(e,a+2*o,l+2*o,n);break;case 4:renderPip(e,a+o,l+o,n),renderPip(e,a+o,l+2*o,n),renderPip(e,a+2*o,l+2*o,n),renderPip(e,a+2*o,l+o,n);break;case 5:renderPip(e,a+o,l+o,n),renderPip(e,a+o,l+2*o,n),renderPip(e,a+r,l+r,n),renderPip(e,a+2*o,l+2*o,n),renderPip(e,a+2*o,l+o,n);break;case 6:renderPip(e,a+o,l+o,n),renderPip(e,a+o,l+2*o,n),renderPip(e,a+o,l+r,n),renderPip(e,a+2*o,l+2*o,n),renderPip(e,a+2*o,l+o,n),renderPip(e,a+2*o,l+r,n)}e.setTransform(1,0,0,1,0,0)}};window.customElements.define("top-die",TopDieHTMLElement);const TopPlayerListHTMLElement=class extends HTMLElement{constructor(){super()}connectedCallback(){0>=this.players.length&&this.appendChild(DEFAULT_SYSTEM_PLAYER)}disconnectedCallback(){}get players(){return[...this.getElementsByTagName("top-player")]}};window.customElements.define("top-player-list",TopPlayerListHTMLElement),window.twentyonepips=window.twentyonepips||Object.freeze({VERSION:"0.0.1",LICENSE:"LGPL-3.0",WEBSITE:"https://twentyonepips.org",HTMLElements:{TopDiceBoardHTMLElement:TopDiceBoardHTMLElement,TopDieHTMLElement:TopDieHTMLElement,TopPlayerHTMLElement:TopPlayerHTMLElement,TopPlayerListHTMLElement:TopPlayerListHTMLElement}});
//# sourceMappingURL=twenty-one-pips.min.js.map
